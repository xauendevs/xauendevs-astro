---

---

<dialog
  class="clip-dialog items-center justify-center bg-transparent px-4 text-2xl text-white sm:px-0"
>
  <div class="relative block w-[80vw] max-w-[1000px] bg-transparent">
    <iframe
      class="yt-iframe block aspect-video h-full w-full overflow-hidden rounded bg-transparent"
      src=""
      title="Video de la Pivo&Code"
      allow="autoplay"
    >
    </iframe>

    <button
      type="button"
      class="close-dialog fixed right-8 top-8 rounded bg-black/60 p-4 transition hover:scale-110 hover:bg-accent hover:text-black"
    >
      <svg
        class="size-5"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 14 14"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
      </svg>
    </button>
  </div>
</dialog>

<style>
  .clip-dialog[open]::backdrop {
    background-color: rgba(0, 0, 0, 0.7);

    animation-name: join-anim;
    animation-duration: 200ms;
    animation-fill-mode: forwards;
    animation-timing-function: ease-in-out;
  }

  @keyframes join-anim {
    from {
      background-color: rgba(0, 0, 0, 0);
    }
    to {
      background-color: rgba(0, 0, 0, 0.7);
    }
  }
</style>

<script>
  import { $, $$ } from "@/lib/dom-selector";
  (() => {
    const $clipContainer = $$(".clip-container");
    const $clipDialog = $(".clip-dialog") as HTMLDialogElement;
    const $closeButton = $(".close-dialog");
    let $ytFrame = $(".yt-iframe");
    const ytFrameCopy = $ytFrame;

    if (!$clipDialog) return;

    $clipDialog.addEventListener("close", () => {
      if ($ytFrame !== null) {
        $ytFrame.setAttribute("src", "");
      } else {
        ytFrameCopy?.setAttribute("src", "");
      }
    });

    $closeButton?.addEventListener("click", () => {
      $clipDialog.close();
      if ($ytFrame !== null) {
        $ytFrame.remove();
      } else {
        ytFrameCopy?.remove();
      }
    });

    $clipDialog.addEventListener("click", (event) => {
      const target = event.target as HTMLElement;
      if (target === $clipDialog) $clipDialog.close();
    });

    $clipContainer?.forEach((el) => {
      el.addEventListener("click", async (event) => {
        const currentTarget = event.currentTarget as HTMLElement;
        const { url } = currentTarget.dataset;
        if (!url) return;
        $ytFrame = $(".yt-iframe") as HTMLIFrameElement;
        if ($ytFrame !== null) {
          $ytFrame.setAttribute("src", `${url}&autoplay=1`);
        } else {
          if (ytFrameCopy) {
            $clipDialog?.querySelector("div")?.prepend(ytFrameCopy);
            ytFrameCopy.setAttribute("src", `${url}&autoplay=1`);
          }
        }
        $clipDialog.showModal();
      });
    });
  })();
</script>
